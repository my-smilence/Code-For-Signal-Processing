%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
%  Kalman滤波在船舶GPS导航定位系统中的应用(四维，x方向x,v   ,y方向x,v; ） 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
function main  
T=1;  %采样周期
N=80/T;  %总的采样次数
F=[1,T,0,0;0,1,0,0;0,0,1,T;0,0,0,1];  
H=[1,0,0,0;0,0,1,0];  
Q=4e-4  ;
R=100*eye(2);
X=zeros(4,N);  
X(:,1)=[100,2,200,20]; %x四维，初始位置（-100,200）水平速度2，垂直速度20 
Z=zeros(2,N);  
Z(:,1)=[X(1,1),X(3,1)];  %z只观测到位置，没有速度
Xkf=zeros(4,N);  
Xkf(:,1)=X(:,1);  
P0=eye(4);  %协方差矩阵初始化，4*4单位矩阵
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
for t=2:N  %模型
    X(:,t)=F*X(:,t-1)+sqrt(Q)*randn(4,1);%目标真实轨迹  randn(4,1)4*1随机矩阵
    Z(:,t)=H*X(:,t)+sqrt(R)*randn(2,1); %观测轨迹randn(2,1)2*1随机矩阵
end  
for i=2:N  
    X_pre=F*Xkf(:,i-1);  
    P_pre=F*P0*F'+Q;  
    K=P_pre*H'/(H*P_pre*H'+R);  
    Xkf(:,i)=X_pre+K*(Z(:,i)-H*X_pre);  
    P0=(eye(4)-K*H)*P_pre;  
end  
for i=1:N  
    Err_Observation(i)=RMS(X(:,i),Z(:,i));  
    Err_KalmanFilter(i)=RMS(X(:,i),Xkf(:,i));  
end  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
figure;  
hold on;box on;  
plot(X(1,:),X(3,:),'-k');  %位置轨迹
plot(Z(1,:),Z(2,:),'-b.');  %观测轨迹
plot(Xkf(1,:),Xkf(3,:),'-r+');  %Kalman估计轨迹
legend('真实轨迹','观测轨迹','滤波轨迹')  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
figure;  
hold on; box on;  
plot(Err_Observation,'-ko','MarkerFace','g')  
plot(Err_KalmanFilter,'-ks','MarkerFace','r')  
legend('滤波前误差','滤波后误差')  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
function dist=RMS(X1,X2);  
if length(X2)<=2  
    dist=sqrt( (X1(1)-X2(1))^2 + (X1(3)-X2(2))^2 );  
else  
    dist=sqrt( (X1(1)-X2(1))^2 + (X1(3)-X2(3))^2 );  
end  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
